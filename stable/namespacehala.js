var namespacehala =
[
    [ "aligned_allocator", "classhala_1_1aligned__allocator.html", "classhala_1_1aligned__allocator" ],
    [ "aligned_iterator", "structhala_1_1aligned__iterator.html", "structhala_1_1aligned__iterator" ],
    [ "aligned_iterator_traits", "structhala_1_1aligned__iterator__traits.html", "structhala_1_1aligned__iterator__traits" ],
    [ "aligned_iterator_traits< T, R, aligned_vector< T, R > const >", "structhala_1_1aligned__iterator__traits_3_01T_00_01R_00_01aligned__vector_3_01T_00_01R_01_4_01const_01_4.html", "structhala_1_1aligned__iterator__traits_3_01T_00_01R_00_01aligned__vector_3_01T_00_01R_01_4_01const_01_4" ],
    [ "bind_pack", "structhala_1_1bind__pack.html", "structhala_1_1bind__pack" ],
    [ "binded_gpu_vector", "structhala_1_1binded__gpu__vector.html", "structhala_1_1binded__gpu__vector" ],
    [ "cholmod_factor", "classhala_1_1cholmod__factor.html", "classhala_1_1cholmod__factor" ],
    [ "chronometer", "structhala_1_1chronometer.html", "structhala_1_1chronometer" ],
    [ "convert_pointer", "structhala_1_1convert__pointer.html", "structhala_1_1convert__pointer" ],
    [ "cpu_engine", "structhala_1_1cpu__engine.html", "structhala_1_1cpu__engine" ],
    [ "cpu_ilu", "structhala_1_1cpu__ilu.html", "structhala_1_1cpu__ilu" ],
    [ "cpu_sparse_matrix", "structhala_1_1cpu__sparse__matrix.html", "structhala_1_1cpu__sparse__matrix" ],
    [ "cpu_triangular_matrix", "classhala_1_1cpu__triangular__matrix.html", "classhala_1_1cpu__triangular__matrix" ],
    [ "cuda_struct_description", "structhala_1_1cuda__struct__description.html", "structhala_1_1cuda__struct__description" ],
    [ "default_alignment", "structhala_1_1default__alignment.html", null ],
    [ "default_alignment< T, regtype::avx >", "structhala_1_1default__alignment_3_01T_00_01regtype_1_1avx_01_4.html", null ],
    [ "default_alignment< T, regtype::avx512 >", "structhala_1_1default__alignment_3_01T_00_01regtype_1_1avx512_01_4.html", null ],
    [ "default_alignment< T, regtype::sse >", "structhala_1_1default__alignment_3_01T_00_01regtype_1_1sse_01_4.html", null ],
    [ "define_aligned", "structhala_1_1define__aligned.html", null ],
    [ "define_data", "structhala_1_1define__data.html", null ],
    [ "define_data< T * >", "structhala_1_1define__data_3_01T_01_5_01_4.html", null ],
    [ "define_data< T *const >", "structhala_1_1define__data_3_01T_01_5const_01_4.html", null ],
    [ "define_data< typename std::valarray< T > >", "structhala_1_1define__data_3_01typename_01std_1_1valarray_3_01T_01_4_01_4.html", null ],
    [ "define_data< typename std::valarray< T > const >", "structhala_1_1define__data_3_01typename_01std_1_1valarray_3_01T_01_4_01const_01_4.html", null ],
    [ "define_preconditioner", "structhala_1_1define__preconditioner.html", "structhala_1_1define__preconditioner" ],
    [ "define_resize", "structhala_1_1define__resize.html", null ],
    [ "define_single", "structhala_1_1define__single.html", null ],
    [ "define_size", "structhala_1_1define__size.html", null ],
    [ "define_size< T * >", "structhala_1_1define__size_3_01T_01_5_01_4.html", null ],
    [ "define_standard_precision", "structhala_1_1define__standard__precision.html", null ],
    [ "define_standard_precision< scalar_type, typename std::enable_if_t< is_double< scalar_type >::value||is_dcomplex< scalar_type >::value > >", "structhala_1_1define__standard__precision_3_01scalar__type_00_01typename_01std_1_1enable__if__t_94c39c3699550bf062219c02f69ea58a.html", "structhala_1_1define__standard__precision_3_01scalar__type_00_01typename_01std_1_1enable__if__t_94c39c3699550bf062219c02f69ea58a" ],
    [ "define_standard_precision< scalar_type, typename std::enable_if_t< is_float< scalar_type >::value||is_fcomplex< scalar_type >::value > >", "structhala_1_1define__standard__precision_3_01scalar__type_00_01typename_01std_1_1enable__if__t_afbd26a018402ee8942f38140aef9e94.html", "structhala_1_1define__standard__precision_3_01scalar__type_00_01typename_01std_1_1enable__if__t_afbd26a018402ee8942f38140aef9e94" ],
    [ "define_standard_type", "structhala_1_1define__standard__type.html", null ],
    [ "define_standard_type< scalar_type, typename std::enable_if_t< is_dcomplex< scalar_type >::value > >", "structhala_1_1define__standard__type_3_01scalar__type_00_01typename_01std_1_1enable__if__t_3_01i4cf2038c150435d805bd9b1d467e7b42.html", "structhala_1_1define__standard__type_3_01scalar__type_00_01typename_01std_1_1enable__if__t_3_01i4cf2038c150435d805bd9b1d467e7b42" ],
    [ "define_standard_type< scalar_type, typename std::enable_if_t< is_double< scalar_type >::value > >", "structhala_1_1define__standard__type_3_01scalar__type_00_01typename_01std_1_1enable__if__t_3_01i0c5b0ce6d79cae0efb87b13dc9252089.html", "structhala_1_1define__standard__type_3_01scalar__type_00_01typename_01std_1_1enable__if__t_3_01i0c5b0ce6d79cae0efb87b13dc9252089" ],
    [ "define_standard_type< scalar_type, typename std::enable_if_t< is_fcomplex< scalar_type >::value > >", "structhala_1_1define__standard__type_3_01scalar__type_00_01typename_01std_1_1enable__if__t_3_01i5857803c55254d4e3b184184a85d241b.html", "structhala_1_1define__standard__type_3_01scalar__type_00_01typename_01std_1_1enable__if__t_3_01i5857803c55254d4e3b184184a85d241b" ],
    [ "define_standard_type< scalar_type, typename std::enable_if_t< is_float< scalar_type >::value > >", "structhala_1_1define__standard__type_3_01scalar__type_00_01typename_01std_1_1enable__if__t_3_01i73aed2a2c5e61137348d720971f714c7.html", "structhala_1_1define__standard__type_3_01scalar__type_00_01typename_01std_1_1enable__if__t_3_01i73aed2a2c5e61137348d720971f714c7" ],
    [ "define_standard_type< scalar_type, typename std::enable_if_t< std::is_integral< scalar_type >::value > >", "structhala_1_1define__standard__type_3_01scalar__type_00_01typename_01std_1_1enable__if__t_3_01sa8e02b8fa9ca8687afebc17a0dd6429a.html", "structhala_1_1define__standard__type_3_01scalar__type_00_01typename_01std_1_1enable__if__t_3_01sa8e02b8fa9ca8687afebc17a0dd6429a" ],
    [ "define_type", "structhala_1_1define__type.html", "structhala_1_1define__type" ],
    [ "define_type< T * >", "structhala_1_1define__type_3_01T_01_5_01_4.html", "structhala_1_1define__type_3_01T_01_5_01_4" ],
    [ "define_type< T *& >", "structhala_1_1define__type_3_01T_01_5_6_01_4.html", "structhala_1_1define__type_3_01T_01_5_6_01_4" ],
    [ "define_type< T *const >", "structhala_1_1define__type_3_01T_01_5const_01_4.html", "structhala_1_1define__type_3_01T_01_5const_01_4" ],
    [ "define_unaligned", "structhala_1_1define__unaligned.html", null ],
    [ "define_vdefault", "structhala_1_1define__vdefault.html", "structhala_1_1define__vdefault" ],
    [ "device_pntr", "structhala_1_1device__pntr.html", null ],
    [ "deviceid_extractor", "structhala_1_1deviceid__extractor.html", null ],
    [ "deviceid_extractor< const gpu_vector< T > >", "structhala_1_1deviceid__extractor_3_01const_01gpu__vector_3_01T_01_4_01_4.html", null ],
    [ "deviceid_extractor< gpu_vector< T > >", "structhala_1_1deviceid__extractor_3_01gpu__vector_3_01T_01_4_01_4.html", null ],
    [ "engined_vector", "structhala_1_1engined__vector.html", "structhala_1_1engined__vector" ],
    [ "engined_vector_binding", "structhala_1_1engined__vector__binding.html", "structhala_1_1engined__vector__binding" ],
    [ "gpu_engine", "structhala_1_1gpu__engine.html", "structhala_1_1gpu__engine" ],
    [ "gpu_ilu", "structhala_1_1gpu__ilu.html", "structhala_1_1gpu__ilu" ],
    [ "gpu_pconvert", "structhala_1_1gpu__pconvert.html", "structhala_1_1gpu__pconvert" ],
    [ "gpu_pntr", "structhala_1_1gpu__pntr.html", "structhala_1_1gpu__pntr" ],
    [ "gpu_sparse_matrix", "structhala_1_1gpu__sparse__matrix.html", "structhala_1_1gpu__sparse__matrix" ],
    [ "gpu_triangular_matrix", "classhala_1_1gpu__triangular__matrix.html", "classhala_1_1gpu__triangular__matrix" ],
    [ "gpu_vector", "classhala_1_1gpu__vector.html", "classhala_1_1gpu__vector" ],
    [ "gpu_wrapped_array", "classhala_1_1gpu__wrapped__array.html", "classhala_1_1gpu__wrapped__array" ],
    [ "has_resize", "structhala_1_1has__resize.html", null ],
    [ "host_pntr", "structhala_1_1host__pntr.html", null ],
    [ "is_compatible", "structhala_1_1is__compatible.html", null ],
    [ "is_compatible< T, U, std::enable_if_t<(is_float< T >::value &&is_float< U >::value)||(is_double< T >::value &&is_double< U >::value)||(is_fcomplex< T >::value &&is_fcomplex< U >::value)||(is_dcomplex< T >::value &&is_dcomplex< U >::value) > >", "structhala_1_1is__compatible_3_01T_00_01U_00_01std_1_1enable__if__t_3_07is__float_3_01T_01_4_1_1412954aeeba2a8653ccbd9c396d17c2e.html", null ],
    [ "is_complex", "structhala_1_1is__complex.html", null ],
    [ "is_dcomplex", "structhala_1_1is__dcomplex.html", null ],
    [ "is_dcomplex< cuDoubleComplex >", "structhala_1_1is__dcomplex_3_01cuDoubleComplex_01_4.html", null ],
    [ "is_dcomplex< rocblas_double_complex >", "structhala_1_1is__dcomplex_3_01rocblas__double__complex_01_4.html", null ],
    [ "is_double", "structhala_1_1is__double.html", null ],
    [ "is_engine", "structhala_1_1is__engine.html", null ],
    [ "is_fcomplex", "structhala_1_1is__fcomplex.html", null ],
    [ "is_fcomplex< cuComplex >", "structhala_1_1is__fcomplex_3_01cuComplex_01_4.html", null ],
    [ "is_fcomplex< rocblas_float_complex >", "structhala_1_1is__fcomplex_3_01rocblas__float__complex_01_4.html", null ],
    [ "is_float", "structhala_1_1is__float.html", null ],
    [ "is_on_cpu", "structhala_1_1is__on__cpu.html", null ],
    [ "is_on_cpu< TriangularMatrix, std::enable_if_t< std::is_same< typename TriangularMatrix::engine_type, cpu_engine >::value, void > >", "structhala_1_1is__on__cpu_3_01TriangularMatrix_00_01std_1_1enable__if__t_3_01std_1_1is__same_3_059ab93c57629e156e98a33cf295ab077.html", null ],
    [ "is_on_gpu", "structhala_1_1is__on__gpu.html", null ],
    [ "is_on_gpu< TriangularMatrix, std::enable_if_t< std::is_same< typename TriangularMatrix::engine_type, gpu_engine >::value, void > >", "structhala_1_1is__on__gpu_3_01TriangularMatrix_00_01std_1_1enable__if__t_3_01std_1_1is__same_3_0bdb9fd270764a905cfa4ec2238334172.html", null ],
    [ "mmpack", "structhala_1_1mmpack.html", "structhala_1_1mmpack" ],
    [ "number_abs", "structhala_1_1number__abs.html", null ],
    [ "number_abs< T, std::enable_if_t<(is_fcomplex< T >::value||is_dcomplex< T >::value) &&!std::is_same< T, std::complex< float > >::value &&!std::is_same< T, std::complex< double > >::value > >", "structhala_1_1number__abs_3_01T_00_01std_1_1enable__if__t_3_07is__fcomplex_3_01T_01_4_1_1value_7ce04d684b004476fad02b6dcb4096c1e.html", null ],
    [ "number_caster", "structhala_1_1number__caster.html", null ],
    [ "number_caster< T, T, void >", "structhala_1_1number__caster_3_01T_00_01T_00_01void_01_4.html", null ],
    [ "number_caster< T, U, std::enable_if_t<(is_fcomplex< T >::value||is_dcomplex< T >::value) &&!std::is_same< T, std::complex< float > >::value &&!std::is_same< T, std::complex< double > >::value &&(is_float< U >::value||is_double< U >::value) > >", "structhala_1_1number__caster_3_01T_00_01U_00_01std_1_1enable__if__t_3_07is__fcomplex_3_01T_01_4_c9ebd9e05ddfb819c620fe1b9ddb50bf.html", null ],
    [ "number_caster< T, U, std::enable_if_t<(is_fcomplex< T >::value||is_dcomplex< T >::value) &&(is_fcomplex< U >::value||is_dcomplex< U >::value) &&!(std::is_same< T, std::complex< float >>::value &&std::is_same< U, std::complex< double >>::value) &&!(std::is_same< T, std::complex< double >>::value &&std::is_same< U, std::complex< float >>::value) &&!std::is_same< T, U >::value > >", "structhala_1_1number__caster_3_01T_00_01U_00_01std_1_1enable__if__t_3_07is__fcomplex_3_01T_01_4_c12169cc39bc67d5aaab32e4081dd46b.html", null ],
    [ "number_caster< T, U, std::enable_if_t<(is_float< T >::value||is_double< T >::value) &&(is_fcomplex< U >::value||is_dcomplex< U >::value) > >", "structhala_1_1number__caster_3_01T_00_01U_00_01std_1_1enable__if__t_3_07is__float_3_01T_01_4_1_159fd8110665464cad2aa9be3cbdd2598.html", null ],
    [ "number_caster< T, U, std::enable_if_t<(std::is_same< T, std::complex< float >>::value &&std::is_same< U, std::complex< double >>::value)||(std::is_same< U, std::complex< float >>::value &&std::is_same< T, std::complex< double >>::value) > >", "structhala_1_1number__caster_3_01T_00_01U_00_01std_1_1enable__if__t_3_07std_1_1is__same_3_01T_00f2af9c0422053eadd209190d24740aed.html", null ],
    [ "number_conj", "structhala_1_1number__conj.html", null ],
    [ "number_conj< T, std::enable_if_t< std::is_same< T, std::complex< float > >::value||std::is_same< T, std::complex< double > >::value > >", "structhala_1_1number__conj_3_01T_00_01std_1_1enable__if__t_3_01std_1_1is__same_3_01T_00_01std_1_e84fa513bea1c99ddd37d505900889ee.html", null ],
    [ "number_conj< T, std::enable_if_t<(is_fcomplex< T >::value||is_dcomplex< T >::value) &&!std::is_same< T, std::complex< float > >::value &&!std::is_same< T, std::complex< double > >::value > >", "structhala_1_1number__conj_3_01T_00_01std_1_1enable__if__t_3_07is__fcomplex_3_01T_01_4_1_1value_33d777c74e4de7ed17be3c79b186c62e.html", null ],
    [ "number_imag", "structhala_1_1number__imag.html", null ],
    [ "number_imag< T, std::enable_if_t<(is_fcomplex< T >::value||is_dcomplex< T >::value) &&!std::is_same< T, std::complex< float > >::value &&!std::is_same< T, std::complex< double > >::value > >", "structhala_1_1number__imag_3_01T_00_01std_1_1enable__if__t_3_07is__fcomplex_3_01T_01_4_1_1value_a834d0f43150f3aaba3f99fe64cd01f2.html", null ],
    [ "number_real", "structhala_1_1number__real.html", null ],
    [ "number_real< T, std::enable_if_t<(is_fcomplex< T >::value||is_dcomplex< T >::value) &&!std::is_same< T, std::complex< float > >::value &&!std::is_same< T, std::complex< double > >::value > >", "structhala_1_1number__real_3_01T_00_01std_1_1enable__if__t_3_07is__fcomplex_3_01T_01_4_1_1value_53d3abf6ae39c17636ad491fb948cd44.html", null ],
    [ "rocm_struct_description", "structhala_1_1rocm__struct__description.html", "structhala_1_1rocm__struct__description" ],
    [ "stop_criteria", "structhala_1_1stop__criteria.html", "structhala_1_1stop__criteria" ],
    [ "vector_constructor", "structhala_1_1vector__constructor.html", null ],
    [ "vector_constructor< gpu_vector< T > >", "structhala_1_1vector__constructor_3_01gpu__vector_3_01T_01_4_01_4.html", null ],
    [ "vex_regtype", "structhala_1_1vex__regtype.html", "structhala_1_1vex__regtype" ],
    [ "vex_stride", "structhala_1_1vex__stride.html", null ],
    [ "wrapped_array", "classhala_1_1wrapped__array.html", "classhala_1_1wrapped__array" ]
];